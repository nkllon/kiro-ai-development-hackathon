[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kiro-ai-development-hackathon"
version = "0.1.0"
description = "Code with Kiro Hackathon: AI-Powered IDE for Spec-Driven Development"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "nkllon Team", email = "team@nkllon.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.9"
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "pydantic>=2.0.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "click>=8.0.0",
    "langgraph>=0.6.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.4.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/nkllon/kiro-ai-development-hackathon"
Documentation = "https://github.com/nkllon/kiro-ai-development-hackathon#readme"
Repository = "https://github.com/nkllon/kiro-ai-development-hackathon.git"
Issues = "https://github.com/nkllon/kiro-ai-development-hackathon/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
