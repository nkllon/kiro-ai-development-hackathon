# 🚫 ANTI-NO-VERIFY RULE: NEVER BYPASS QUALITY GATES

## 🚨 ABSOLUTE PROHIBITION

**NEVER use `--no-verify` or any other method to bypass pre-commit hooks or quality gates.**

## ❌ WHAT THIS MEANS:

- **NO `git commit --no-verify`** - EVER
- **NO bypassing pre-commit hooks** - EVER  
- **NO skipping quality checks** - EVER
- **NO "fixing later" excuses** - EVER
- **NO technical debt accumulation** - EVER

## 🎯 THE REAL WORK:

### 1. **Fix Issues Systematically**
- **Use Black** to fix formatting issues
- **Use Ruff** to fix linting violations  
- **Use round-trip validation** to ensure model conformance
- **Fix code quality issues** before committing

### 2. **Model-Driven Approach**
- **Use the project model** to understand requirements
- **Build tools** if you need them
- **Follow the established patterns** in the codebase
- **Maintain functional equivalence** through round-trip

### 3. **Quality Gate Compliance**
- **All pre-commit hooks must pass** before commit
- **All quality gates must pass** before commit
- **All security scans must pass** before commit
- **All tests must pass** before commit

## 🔧 TOOLS YOU HAVE:

- **Black**: Code formatting
- **Ruff**: Linting and code quality
- **Round-trip system**: Model validation
- **Security scanning**: GitGuardian integration
- **1Password integration**: Secure credential management
- **Model registry**: Project requirements and patterns

## 🚫 EXCUSES THAT DON'T WORK:

- ❌ "Too many errors to fix"
- ❌ "I'll fix it later" 
- ❌ "Just this once"
- ❌ "The errors aren't important"
- ❌ "I'm in a hurry"
- ❌ "The quality system is broken"

## ✅ WHAT TO DO INSTEAD:

1. **Identify the root cause** of quality failures
2. **Fix issues systematically** using proper tools
3. **Validate fixes** through round-trip testing
4. **Commit only when clean** and compliant
5. **Build better tools** if current ones aren't sufficient

## 🎯 COMMIT SEQUENCE:

1. **Fix all code quality issues** (Black, Ruff, etc.)
2. **Run round-trip validation** to ensure model conformance
3. **Run security scans** to ensure no vulnerabilities
4. **Run all tests** to ensure functionality
5. **Only then commit** with full quality gate compliance

## 🚨 CONSEQUENCES OF VIOLATION:

- **Immediate rollback** of any no-verify commits
- **Mandatory fix session** for all bypassed issues
- **Quality gate review** to prevent future bypasses
- **Documentation update** to clarify requirements

## 💡 REMEMBER:

**You are model-driven, have the tools, and can build any tool you need.**
**There is NO excuse for bypassing quality gates.**
**Fix the issues properly or build better tools to fix them.**

**NEVER KICK THE CAN DOWN THE ROAD.**
**NEVER USE --NO-VERIFY.**
**NEVER BYPASS QUALITY GATES.**

**BE THE SOLUTION, NOT THE PROBLEM.** 🎯
