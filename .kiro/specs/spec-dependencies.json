{
  "specDependencies": {
    "ghostbusters-framework": {
      "dependencies": [],
      "description": "Foundation framework providing multi-agent orchestration, validation, and expert agents",
      "layer": "foundation"
    },
    "spec-framework": {
      "dependencies": ["ghostbusters-framework"],
      "description": "Document management, validation, and dependency governance",
      "layer": "infrastructure"
    },
    "systematic-pdca-orchestrator": {
      "dependencies": ["ghostbusters-framework"],
      "description": "PDCA cycle execution and systematic validation",
      "layer": "orchestration"
    },
    "systematic-metrics-engine": {
      "dependencies": ["ghostbusters-framework"],
      "description": "Metrics collection and superiority demonstration",
      "layer": "orchestration"
    },
    "parallel-dag-orchestrator": {
      "dependencies": ["ghostbusters-framework"],
      "description": "Parallel execution and scalable agent coordination",
      "layer": "orchestration"
    },
    "beast-mode-framework": {
      "dependencies": ["ghostbusters-framework"],
      "description": "Systematic hackathon domination engine",
      "layer": "application"
    },
    "beast-mode-core": {
      "dependencies": ["beast-mode-framework", "systematic-pdca-orchestrator", "systematic-metrics-engine"],
      "description": "Core Beast Mode implementation",
      "layer": "application"
    },
    "git-devops-pipeline": {
      "dependencies": ["beast-mode-framework"],
      "description": "Git-based DevOps pipeline integration",
      "layer": "application"
    },
    "devpost-hackathon-integration": {
      "dependencies": ["beast-mode-framework"],
      "description": "Devpost platform integration for hackathons",
      "layer": "application"
    }
  },
  "dependencyLayers": {
    "foundation": {
      "description": "Core foundational services that all other specs depend on",
      "specs": ["ghostbusters-framework"]
    },
    "infrastructure": {
      "description": "Infrastructure services for spec management and governance",
      "specs": ["spec-framework"]
    },
    "orchestration": {
      "description": "Orchestration and execution services",
      "specs": ["systematic-pdca-orchestrator", "systematic-metrics-engine", "parallel-dag-orchestrator"]
    },
    "application": {
      "description": "Application-level implementations and integrations",
      "specs": ["beast-mode-framework", "beast-mode-core", "git-devops-pipeline", "devpost-hackathon-integration"]
    }
  },
  "validationRules": {
    "dagCompliance": "All dependency relationships must form a Directed Acyclic Graph (DAG)",
    "layerHierarchy": "Specs can only depend on specs in the same layer or lower layers",
    "serviceInterfaces": "All dependencies must be accessed through published service interfaces only",
    "circularDependencyPrevention": "No spec may directly or indirectly depend on itself"
  }
}