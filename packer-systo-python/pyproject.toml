[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "packer-systo"
dynamic = ["version"]
description = "Systematic improvements for HashiCorp Packer with intelligent delusion detection and recovery"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Packer Systo Team", email = "team@packer-systo.dev" },
]
keywords = [
    "packer",
    "hashicorp", 
    "devops",
    "infrastructure",
    "automation",
    "systematic",
    "beast-mode",
    "delusion-detection",
    "recovery-engine",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "jinja2>=3.1.0",
    "rich>=13.0.0",
    "httpx>=0.25.0",
    "asyncio-mqtt>=0.13.0",
    "structlog>=23.0.0",
    "tenacity>=8.2.0",
    "python-hcl2>=4.3.0",
    "jsonschema>=4.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
integration = [
    "ansible>=8.0.0",
    "fabric>=3.2.0",
    "paramiko>=3.3.0",
    "docker>=6.1.0",
    "kubernetes>=27.2.0",
]
all = [
    "packer-systo[dev,integration]",
]

[project.urls]
Homepage = "https://github.com/your-org/packer-systo"
Documentation = "https://packer-systo.readthedocs.io"
Repository = "https://github.com/your-org/packer-systo.git"
"Bug Tracker" = "https://github.com/your-org/packer-systo/issues"
Changelog = "https://github.com/your-org/packer-systo/blob/main/CHANGELOG.md"

[project.scripts]
packer-systo = "packer_systo.cli:main"
systo = "packer_systo.cli:main"

[tool.hatch.version]
path = "src/packer_systo/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/packer_systo"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
    "README.md",
    "CHANGELOG.md",
    "LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
fail_under = 90